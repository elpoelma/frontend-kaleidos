<FileDropzone
  @accept={{@accept}}
  @disabled={{or this.fileQueue.files.length this.uploadIsCompleted}}
  @multiple={{@multiple}}
  @name={{this.fileQueueName}}
  @class="auk-file-upload auk-file-upload--{{if this.this.uploadIsCompleted "success" "gray-100"}} {{if @fullHeight "auk-file-upload--full-height"}}"
  @tagName="div"
  @action={{perform this.uploadFileTask}}
as |dropzone|
>
  {{!-- Note that we use a regular <input> here instead of of <FileUpload>.
        This is because at the time of writing, ember-file-upload wrap the input in a <label>-tag
        and our design doesn't allow for this.
        https://github.com/adopted-ember-addons/ember-file-upload/blob/master/addon/components/file-upload/component.js#L80
        https://github.com/adopted-ember-addons/ember-file-upload/issues/388#issuecomment-679868412
        Nonetheless we hook in to the internals of ember-file-uploader in this component's js-file to be able to
        keep on using ember-file-upload's other features (queue) and facilitate a future migration once ember-file-upload
        becomes more flexible.
  --}}
  <input
    type="file"
    accept={{@accept}}
    disabled={{or this.fileQueue.files.length this.uploadIsCompleted}}
    multiple={{@multiple}}
    onchange={{this.addFilesToQueue}}
  >
  <div class="auk-file-upload__content">
    <div class="auk-u-mb-2">
      {{#if (and (not this.fileQueue.files.length) (not this.uploadIsCompleted))}}
        <button
          class="auk-button auk-button--tertiary"
          type="button"
          tabindex="0"
          {{on "click" this.clickInput}}
          {{on "key-up" this.clickInputOnEnter}}
        >
          <span class="auk-button__content">
            <span class="auk-icon auk-icon--default auk-icon--paperclip">
              <i class="ki ki-paperclip"></i>
            </span>
            <span class="auk-button__label">
              {{t "upload-files" numFiles=(if @multiple 2 1)}}
            </span>
          </span>
        </button>
      {{else if this.fileQueue.files.length}}
        {{t "uploading-files" numFiles=this.fileQueue.files.length}}
      {{else if this.uploadIsCompleted}}
        <div class="auk-o-flex auk-o-flex--vertical-align">
          <div class="auk-u-mr">
            <div class="auk-icon auk-icon--default auk-icon--success-dark">
              <i class="ki ki-check"></i>
            </div>
          </div>
          <p>{{t "uploaded-files" numFiles=this.uploadedFileLength}}</p>
        </div>
      {{/if}}
    </div>
    {{#if (and (not this.fileQueue.files.length) (not this.uploadIsCompleted))}}
      <p class="auk-u-muted">
        {{#if dropzone.active}}
          {{#if dropzone.valid}}
            {{t "drop-text"}}
          {{else}}
            {{t "invalid-type"}}
          {{/if}}
        {{else if dropzone.supported}}
          {{t "drag-or-click-for-upload" numFiles=(if @multiple "many" "one")}}
        {{/if}}
      </p>
    {{/if}}
    {{#if (or this.fileQueue.files.length this.uploadIsCompleted)}}
      <WebComponents::AuProgressBar @progress={{if this.uploadIsCompleted 100 this.fileQueue.progress}}/>
    {{/if}}
  </div>
</FileDropzone>